<?php
/**
 * Custom tab template
 */
?>
<?php $_product = $this->getProduct()?>
<div class="fieldset">
    <div class="grid">
        <div class="hor-scroll">
            <table cellspacing="0" class="data border">
                <col width="33%" />
                <col />
                <col />
                <col />
                <col width="1" />
                <col width="1" />
                <col width="1" />
                <col width="1" />
                <thead>
                <tr class="headings">
                    <th><?php echo Mage::helper('download')->__('Title')?> <span class="required">*</span></th>
                    <th><?php echo Mage::helper('download')->__('Visible')?></th>
                    <th><?php echo Mage::helper('download')->__('File')?></th>
                    <th><span class="nobr"><?php echo Mage::helper('download')->__('Sort Order')?></span></th>
                    <th>&nbsp;</th>
                </tr>
                </thead>
                <tfoot>
                <tr>
                    <td colspan="8" class="a-right">
                        <?php echo $this->getAddButtonHtml()?>&nbsp;
                        <?php echo $this->getUploadButtonHtml() ?>
                    </td>
                </tr>
                </tfoot>
                <tbody id="extradownload_link_items_body">
                </tbody>
            </table>
        </div>
    </div>
</div>
<script type="text/javascript">

    var ExtraDownloadlinkTemplate = '<tr>'+
        '<td>'+
        '<input type="hidden" class="__delete__" name="extradownload[link][{{id}}][is_delete]" value="" />'+
        '<input type="hidden" name="extradownload[link][{{id}}][link_id]" value="{{link_id}}" />'+
        '<input type="text" class="required-entry input-text" name="extradownload[link][{{id}}][title]" value="{{title}}" />'+
        '<?php echo $_product->getStoreId()?'<input type="checkbox" id="extradownload{{id}}_title" name="extradownload[link][{{id}}][use_default_title]" value="1" /><label class="normal" for="extradownload_link_{{id}}_title">Use Default Value</label>':'' ?>'+
        '</td>'+
        '<td class="a-center">'+
        '<select id="extradownload_link _{{id}}_visible" name="extradownload[link][{{id}}][is_visible]">'+
            '<option value="1">Yes</option>'+
            '<option value="0">No</option>'+
        '</select>'+
        '</td>'+
        '<td>'+
        '<div class="files">'+
        '<div class="row">'+
        '<label for="extradownload_link_{{id}}_file_type"><input type="radio" class="radio validate-one-required-by-name" id="extradownload_link_{{id}}_file_type" name="extradownload[link][{{id}}][type]" value="file"{{file_checked}} /> File:</label>'+
        '<input type="hidden" class="validate-extradownload-file" id="extradownload_link_{{id}}_file_save" name="extradownload[link][{{id}}][file]" value="{{file_save}}" />'+
        '<div id="extradownload_link_{{id}}_file" class="uploader">'+
        '<div id="extradownload_link_{{id}}_file-old" class="file-row-info"></div>'+
        '<div id="extradownload_link_{{id}}_file-new" class="file-row-info new-file"></div>'+
        '<div class="buttons">'+
        '<div id="extradownload_link_{{id}}_file-install-flash" style="display:none">'+
        '<?php echo $this->jsQuoteEscape(Mage::helper('media')->__('This content requires last version of Adobe Flash Player. <a href="%s">Get Flash</a>', 'http://www.adobe.com/go/getflash/')) ?>'+
        '</div>'+
        '</div>'+
        '<div class="clear"></div>'+
        '</div>'+
        '</div>'+
        '<div class="row">'+
        '<label for="extradownload_link_{{id}}_url_type"><input type="radio" class="radio validate-one-required-by-name" id="extradownload_link_{{id}}_url_type" name="extradownload[link][{{id}}][type]" value="url"{{url_checked}} /> URL:</label><input type="text" class="validate-extradownload-url input-text" name="extradownload[link][{{id}}][link_url]" value="{{link_url}}" />'+
        '</div>'+
        '<div>'+
        '<span id="extradownload_link_{{id}}_link_container"></span>'+
        '</div>'+
        '</div>'+
        '</td>'+

        '<td class="a-center"><input type="text" name="extradownload[link][{{id}}][sort_order]" value="{{sort_order}}" class="input-text sort" /></td>'+

        '<td>'+
        '<button id="extradownload_link_{{id}}_delete_button" type="button" class="scalable delete icon-btn delete-link-item"><span><span><span><?php echo $this->jsQuoteEscape(Mage::helper('download')->__('Delete')); ?></span></span></span></button>'+
        '</td>'+

        '</tr>';

    var ExtraDownloadlinkItems = {
        tbody : $('extradownload_link_items_body'),
        templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
        templateText : ExtraDownloadlinkTemplate ,
        itemCount : 0,
        add : function(data) {
            console.log(1);
            alertAlreadyDisplayed = false;
            console.log(2);

            this.template = new Template(this.templateText, this.templateSyntax);
            console.log(3);
            if(!data.link_id){
                data = {};
                data.link_id  = 0;
                data.link_type = 'file';
                data.sample_type = 'none';
                data.number_of_downloads = 5;
            }

            data.id = this.itemCount;
            console.log(4);
            if (data.link_type == 'url') {
                data.url_checked = ' checked="checked"';
            } else if (data.link_type == 'file') {
                data.file_checked = ' checked="checked"';
            }
            if (data.sample_type == 'url') {
                data.sample_url_checked = ' checked="checked"';
            } else if (data.sample_type == 'file') {
                data.sample_file_checked = ' checked="checked"';
            }

            Element.insert(this.tbody, {'bottom':this.template.evaluate(data)});

            scopeTitle = $('extradownload_link_'+data.id+'_title');
            if (scopeTitle) {
                Event.observe(scopeTitle, 'click', function(event){
                    scopeElm = $(Event.findElement(event, 'input'));
                    titleField = scopeElm.up(0).down('input[type="text"]');
                    if (scopeElm.checked == true) {
                        titleField.disabled = true;
                    } else {
                        titleField.disabled = false;
                    }
                });
            }
            if (!data.store_title && scopeTitle) {
                scopeTitle.up(0).down('input[type="text"]').disabled = true;
                scopeTitle.checked = true;
            }

            if (data.is_visible) {
                options = $('extradownload_link _'+data.id+'_visible').options;
                for (var i=0; i < options.length; i++) {
                    if (options[i].value == data.is_visible) {
                        options[i].selected = true;
                    }
                }
            }


            sampleUrl = $('extradownload_link_'+data.id+'_sample_url_type');
            linkUrl = $('extradownload_link_'+data.id+'_url_type');

            if (!data.file_save) {
                data.file_save = [];
            }

            console.log(5);
            // link file
            new Downloadable.FileUploader(
                'links',
                'links_'+data.id,
                linkUrl.up('td'),
                'extradownload[link]['+data.id+']',
                data.file_save,
                'extradownload_link_'+data.id+'_file',
                ''
            );

            linkFile = $('extradownload_link_'+data.id+'_file_type');
            linkFile.advaiceContainer = 'extradownload_link_'+data.id+'_link_container';
            linkUrl.advaiceContainer = 'extradownload_link_'+data.id+'_link_container';
            $('extradownload_link_'+data.id+'_file_save').advaiceContainer = 'extradownload_link_'+data.id+'_link_container';

            this.itemCount++;
            this.bindRemoveButtons();
            console.log(10);
        },
        remove : function(event){
            var element = $(Event.findElement(event, 'tr'));
            alertAlreadyDisplayed = false;
            if(element){
                element.down('input[type="hidden"].__delete__').value = '1';
                Element.select(element, 'div.flex').each(function(elm){
                    elm.remove();
                });
                element.addClassName('no-display');
                element.addClassName('ignore-validate');
                element.hide();
            }
        },
        bindRemoveButtons : function(){
            var buttons = $$('tbody#extradownload_link_items_body .delete-link-item');
            for(var i=0;i<buttons.length;i++){
                if(!$(buttons[i]).binded && !$(buttons[i]).hasClassName('disabled')){
                    $(buttons[i]).binded = true;
                    Event.observe(buttons[i], 'click', this.remove.bind(this));
                }
            }
        }
    }

    ExtraDownloadlinkItems.bindRemoveButtons();

    if($('extradownload_add_link_item')) {
        Event.observe('extradownload_add_link_item', 'click', ExtraDownloadlinkItems.add.bind(ExtraDownloadlinkItems ));
    }

</script>
